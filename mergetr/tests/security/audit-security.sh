#!/bin/bash
# audit-security.sh - Audit complet de s√©curit√© ft_transcendence

# Se positionner √† la racine du projet
cd "$(dirname "$0")/../.."

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç AUDIT S√âCURIT√â ft_transcendence${NC}"
echo "=================================="

SCORE=0
TOTAL=9

echo -e "${YELLOW}üìã 1. Mots de passe hash√©s...${NC}"
if grep -r "bcrypt.hash" backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ Mots de passe hash√©s (bcrypt)${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå Hashage manquant${NC}"
fi

echo -e "${YELLOW}üìã 2. Protection SQL Injection...${NC}"
if grep -r "\$[0-9]" backend/src/ > /dev/null && ! grep -r "sql.*+" backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ Requ√™tes param√©tr√©es utilis√©es${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå Risque SQL Injection${NC}"
fi

echo -e "${YELLOW}üìã 3. Protection XSS...${NC}"
if grep -r "DOMPurify\|sanitize" backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ Protection XSS active${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå Protection XSS manquante${NC}"
fi

echo -e "${YELLOW}üìã 4. HTTPS obligatoire...${NC}"
if [ -f "backend/src/server-https.js" ] && [ -f "config/enable-https.sh" ]; then
    echo -e "${GREEN}‚úÖ HTTPS impl√©ment√©${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå HTTPS manquant${NC}"
fi

echo -e "${YELLOW}üìã 5. Validation formulaires backend...${NC}"
if grep -r "schema.*required\|validateEmail\|validatePassword" backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ Validation backend active${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå Validation backend manquante${NC}"
fi

echo -e "${YELLOW}üìã 6. Validation formulaires frontend...${NC}"
if grep -r "validateEmail\|validatePassword\|ValidationResult" frontend/src/utils/ > /dev/null 2>&1 || \
   grep -r "SecureLoginView\|validation\.ts" frontend/src/ > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Validation frontend stricte impl√©ment√©e${NC}"
    ((SCORE++))
elif grep -r "validation\|validate\|required" frontend/src/ > /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Validation frontend basique d√©tect√©e${NC}"
    echo -e "${RED}‚ùå Validation frontend insuffisante${NC}"
else
    echo -e "${RED}‚ùå Validation frontend manquante${NC}"
fi

echo -e "${YELLOW}üìã 7. Routes prot√©g√©es (JWT)...${NC}"
if grep -r "jwtVerify\|preHandler.*jwt\|authenticate" backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ Routes prot√©g√©es par JWT${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå Routes non prot√©g√©es${NC}"
fi

echo -e "${YELLOW}üìã 8. WebSockets s√©curis√©s (WSS)...${NC}"
if grep -r "wss://\|secure.*websocket" frontend/src/ backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ WebSockets s√©curis√©s${NC}"
    ((SCORE++))
elif grep -r "ws://\|websocket\|socket\.io" frontend/src/ backend/src/ > /dev/null; then
    echo -e "${RED}‚ùå WebSockets non s√©curis√©s d√©tect√©s${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Pas de WebSockets d√©tect√©s (jeu local OK)${NC}"
    ((SCORE++))
fi

echo -e "${YELLOW}üìã 9. Conformit√© GDPR...${NC}"
if grep -r "GDPRService\|gdpr.*export\|anonymize" backend/src/ > /dev/null; then
    echo -e "${GREEN}‚úÖ Conformit√© GDPR compl√®te${NC}"
    ((SCORE++))
else
    echo -e "${RED}‚ùå Module GDPR manquant${NC}"
fi

echo ""
echo -e "${BLUE}üìä R√âSULTAT FINAL${NC}"
echo "=================="

PERCENTAGE=$((SCORE * 100 / TOTAL))

if [ $PERCENTAGE -ge 90 ]; then
    echo -e "${GREEN}üéØ Score: $SCORE/$TOTAL ($PERCENTAGE%) - EXCELLENT${NC}"
elif [ $PERCENTAGE -ge 75 ]; then
    echo -e "${YELLOW}üéØ Score: $SCORE/$TOTAL ($PERCENTAGE%) - BON${NC}"
else
    echo -e "${RED}üéØ Score: $SCORE/$TOTAL ($PERCENTAGE%) - INSUFFISANT${NC}"
fi

echo ""
echo -e "${BLUE}üö® ACTIONS PRIORITAIRES${NC}"
echo "======================="

if [ $SCORE -lt $TOTAL ]; then
    echo -e "${RED}1. Impl√©menter conformit√© GDPR compl√®te${NC}"
    echo -e "${YELLOW}2. V√©rifier s√©curit√© du jeu Pong${NC}"
    echo -e "${YELLOW}3. Tests de p√©n√©tration manuels${NC}"
else
    echo -e "${GREEN}‚úÖ Toutes les exigences obligatoires respect√©es !${NC}"
    echo -e "${GREEN}‚úÖ Module GDPR conforme Articles 15 et 17${NC}"
fi

echo ""
echo -e "${BLUE}üìñ Commandes utiles${NC}"
echo "=================="
echo "üîí HTTPS         : make enable-https"
echo "üß™ Test s√©curit√© : ./test-https-security.sh"
echo "üìä Documentation : SECURITY_CHECKLIST.md"

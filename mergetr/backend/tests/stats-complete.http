# Tests complets pour les statistiques - ft_transcendence
# Ce fichier teste le StatsService avec des données réelles

### Variables
@baseUrl = http://localhost:5001
@apiPrefix = /api/user

### Setup: Créer des utilisateurs de test

### 1. Créer utilisateur 1 (Joueur pro)
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "email": "player1@stats.test",
  "password": "password123456"
}

### 2. Créer utilisateur 2 (Joueur moyen)
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "email": "player2@stats.test", 
  "password": "password123456"
}

### 3. Créer utilisateur 3 (Débutant)
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "email": "player3@stats.test",
  "password": "password123456"
}

### 4. Login player1 pour obtenir le token
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "player1@stats.test",
  "password": "password123456"
}

### 5. Vérifier les stats initiales (doivent être à 0)
GET {{baseUrl}}{{apiPrefix}}/statistics
Authorization: Bearer PLAYER1_TOKEN

### 6. Login player2
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "player2@stats.test",
  "password": "password123456"
}

### 7. Vérifier les stats player2
GET {{baseUrl}}{{apiPrefix}}/statistics
Authorization: Bearer PLAYER2_TOKEN

### 8. Login player3  
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "player3@stats.test",
  "password": "password123456"
}

### 9. Test du leaderboard (doit être vide initialement)
GET {{baseUrl}}{{apiPrefix}}/leaderboard
Authorization: Bearer PLAYER1_TOKEN

### 10. Test des paramètres de pagination
GET {{baseUrl}}{{apiPrefix}}/leaderboard?limit=2&offset=0
Authorization: Bearer PLAYER1_TOKEN

### 11. Test limite maximale
GET {{baseUrl}}{{apiPrefix}}/leaderboard?limit=100
Authorization: Bearer PLAYER1_TOKEN

### 12. Test limite dépassée (doit être limitée à 100)
GET {{baseUrl}}{{apiPrefix}}/leaderboard?limit=150
Authorization: Bearer PLAYER1_TOKEN

### 13. Test offset négatif (doit être 0)
GET {{baseUrl}}{{apiPrefix}}/leaderboard?offset=-5
Authorization: Bearer PLAYER1_TOKEN

### 14. Test format des réponses - Stats
# Vérifier que la réponse contient:
# - gamesPlayed (number)
# - gamesWon (number) 
# - gamesLost (number)
# - winRate (number, pourcentage)
GET {{baseUrl}}{{apiPrefix}}/statistics
Authorization: Bearer PLAYER1_TOKEN

### 15. Test format des réponses - Leaderboard
# Vérifier que la réponse contient:
# - id (UUID)
# - email (string)
# - wins (number)
# - games (number)
GET {{baseUrl}}{{apiPrefix}}/leaderboard
Authorization: Bearer PLAYER1_TOKEN

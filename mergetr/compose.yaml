services:
  vault:
    image: hashicorp/vault:1.15
    restart: always
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://vault:8200
    ports:
      - "8200:8200"
    command: vault server -dev -dev-root-token-id=myroot
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 2s
      retries: 30

  node:
    build: .
    restart: always
    env_file: .env
    environment:
      NODE_ENV: production
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: myroot
    depends_on:
      db:
        condition: service_healthy
      vault:
        condition: service_healthy
    ports:
      - "3000:3000"
    # run: migrate => start (aucun npm install au runtime)
    command: >
      sh -lc "
      npm run migrate &&
      npm start
      "

volumes:
  pgdata:
